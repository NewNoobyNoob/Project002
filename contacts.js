const NUM_CONTACTS = 100;

const firstNames = [
"Mya",
"Israel",
"Margo",
"Hayden",
"Kinslee",
"Khalid",
"Teagan",
"Devon",
"Alora",
"Jason",
"Hayden",
"Ethan",
"Lucille",
"Kayson",
"Brylee",
"Camilo",
"Lennon",
"Aarav",
"Jaelynn",
"Ayaan",
"Giovanna",
"Rey",
"Scarlet",
"Dion",
"Amalia",
"Dax",
"Peyton",
"Wilson",
"Elisabeth",
"Leonardo",
"Sierra",
"Max",
"Dorothy",
"Vincent",
"Lillie",
"Louis",
"Raelynn",
"Kaiden",
"Emely",
"Abdullah",
"Lilianna",
"Danny",
"Lennox",
"Miller",
"Skye",
"Jefferson",
"Alaya",
"Jakari",
"Francesca",
"Mateo",
"Etta",
"Amir",
"Aya",
"Maximiliano",
"Isabelle",
"Luciano",
"Kinsley",
"Mitchell",
"Navy",
"Ernesto",
"Martha",
"Cain",
"Norah",
"Nasir",
"Simone",
"Thaddeus",
"Jolie",
"Keith",
"Isabella",
"Edison",
"Violeta",
"Arian",
"Laylani",
"Chase",
"Lillian",
"Ledger",
"Paloma",
"Jair",
"Eve",
"Fisher",
"Aileen",
"Jadiel",
"Alexandra",
"Lorenzo",
"Zaniyah",
"Axton",
"Dakota",
"Armando",
"Ivory",
"Riggs",
"Ainhoa",
"Marcus",
"Ruby",
"Gerardo",
"Elena",
"Tru",
"Kamilah",
"Kyson",
"Lexie",
"Adan",
];

const lastNames = [
"Rios",
"Strong",
"Rose",
"Henson",
"Espinosa",
"Weaver",
"Shields",
"Carey",
"Hamilton",
"Day",
"Gonzalez",
"Espinoza",
"Day",
"Pruitt",
"Everett",
"Fowler",
"Vincent",
"Hinton",
"Huang",
"Johns",
"Magana",
"Walton",
"Stuart",
"Wilkins",
"Valencia",
"Ross",
"Horn",
"Jarvis",
"Bennett",
"Zamora",
"Wells",
"Flynn",
"Reynolds",
"Mata",
"Singh",
"Russell",
"Marshall",
"Lloyd",
"Duarte",
"Walls",
"Cochran",
"Weiss",
"Rich",
"Tate",
"Sawyer",
"Gregory",
"Avery",
"Huang",
"Martin",
"Dodson",
"Patterson",
"Gaines",
"Montgomery",
"Reynolds",
"Ramsey",
"Collins",
"McClain",
"Yu",
"Blankenship",
"Leach",
];

const rand = (max, min = 0) => 
    Math.floor(Math.random() * (max - min + 1)) + min;

const generateName = () => 
    `${firstNames[rand(firstNames.length - 1)]} ${lastNames[rand(lastNames.length - 1)]}`;

const generatePhone = () => 
    `+995-${rand(599-500)}-${String(rand(99)).padStart(2, "0")}-${String(rand(99)).padStart(2, "0")}-${String(rand(99)).padStart(2, "0")}`;

const createContact = () => ({
    name: generateName(),
    phone: generatePhone(),
});

export const compareNames = (contact1, contact2) => 
    contact1.name.localeCompare(contact2.name);

const addKeys = (val, key) => ({ key, ...val});

export default Array.from({length: NUM_CONTACTS}, createContact).map(addKeys);